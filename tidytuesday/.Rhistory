forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
scale1 <- scale_fill_gradient2(low = "#d1b152",
mid = "#b6d6ab",
high = '#164a06',
midpoint = quantile(log(forest_apportion$pc2020),0.5, na.rm=TRUE),
na.value = '#f0ecc9',
trans = "log",
name = "hectares per capita",
breaks=c(0,1,20,500)
)
forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
extreme14 %>% filter(group=="Top 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = high_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("+",round(diffpc_abs,1))),
size=2.75, vjust=2.5)+
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=high_colour,orientation = "left-rotated")
) +
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020)))+
labs(y="**Top 7**")
extreme14  <- rbind(forest_apportion %>% filter(!is.na(pc2000) | !is.na(pc2020)) %>% slice_max(diffpc_abs,n=7) %>% mutate(group="Top 7"),
forest_apportion  %>%  filter(!is.na(pc2000) | !is.na(pc2020)) %>% slice_min(diffpc_abs,n=7) %>% mutate(group="Bottom 7")) %>%
arrange(desc(area_diff_abs))%>%
mutate(Country=as_factor(entity))
colour_2000 <-"#5b8124"
colour_2020 <-"#5b8124"
p1 <- extreme14 %>% filter(group=="Top 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = high_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("+",round(diffpc_abs,1))),
size=2.75, vjust=2.5)+
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=high_colour,orientation = "left-rotated")
) +
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020)))+
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(y="**Top 7**")
p2 <- extreme14 %>% filter(group=="Bottom 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = low_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("",round(diffpc_abs,1))),
size=2.75, vjust=2.5) +
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y =element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
#axis.text.x=element_blank(),
#axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=low_colour,orientation = "left-rotated")
)+
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020))) +
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(x="Hectares per capita", y="**Bottom 7**")
chart_title <- str_c("Per capita changes between <i  style='color:",
colour_2000,"'> 2000</i> and <i style='color:",
colour_2020,
"'>2020</i>")
plot_dumbnell <- p1 / p2 + plot_annotation(title=chart_title)  &
theme(plot.title =  element_markdown(hjust=0))
plot_dumbnell
colour_2000 <-"#3f849e"
colour_2020 <-"#054963"
p1 <- extreme14 %>% filter(group=="Top 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = high_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("+",round(diffpc_abs,1))),
size=2.75, vjust=2.5)+
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=high_colour,orientation = "left-rotated")
) +
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020)))+
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(y="**Top 7**")
p2 <- extreme14 %>% filter(group=="Bottom 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = low_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("",round(diffpc_abs,1))),
size=2.75, vjust=2.5) +
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y =element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
#axis.text.x=element_blank(),
#axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=low_colour,orientation = "left-rotated")
)+
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020))) +
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(x="Hectares per capita", y="**Bottom 7**")
chart_title <- str_c("Per capita changes between <i  style='color:",
colour_2000,"'> 2000</i> and <i style='color:",
colour_2020,
"'>2020</i>")
plot_dumbnell <- p1 / p2 + plot_annotation(title=chart_title)  &
theme(plot.title =  element_markdown(hjust=0))
plot_dumbnell
colour_2000 <-"#76b6cf"
p1 <- extreme14 %>% filter(group=="Top 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = high_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("+",round(diffpc_abs,1))),
size=2.75, vjust=2.5)+
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=high_colour,orientation = "left-rotated")
) +
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020)))+
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(y="**Top 7**")
p2 <- extreme14 %>% filter(group=="Bottom 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = low_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("",round(diffpc_abs,1))),
size=2.75, vjust=2.5) +
customthemes::custom_plot_theme_md() +
theme(legend.position="none",
panel.grid.major.y =element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
#axis.text.x=element_blank(),
#axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=low_colour,orientation = "left-rotated")
)+
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020))) +
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(x="Hectares per capita", y="**Bottom 7**")
chart_title <- str_c("Per capita changes between <i  style='color:",
colour_2000,"'> 2000</i> and <i style='color:",
colour_2020,
"'>2020</i>")
plot_dumbnell <- p1 / p2 + plot_annotation(title=chart_title)  &
theme(plot.title =  element_markdown(hjust=0))
plot_dumbnell
top10 <- forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
layout <- "
AAAAAA
AAAAAA
AAAAAA
AAAAAA
######
CC##DD
CC##DD
CC####
CC####
######
"
plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
deforestation <- plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
deforestation <- plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
save_image(deforestation,here(tt_date,"deforestation.png"))
layout <- "
AAAAAA
AAAAAA
AAAAAA
AAAAAA
AAAAAA
AAAAAA
######
BBBBDD
BBBBDD
BBBBDD
BBBBDD
CCCC##
CCCC##
CCCC##
CCCC##
######
"
deforestation <- plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
save_image(deforestation,here(tt_date,"deforestation.png"))
layout <- "
AAAAAACCC
AAAAAACCC
AAAAAACCC
AAAAAACCC
AAAAAACCC
AAAAAACCC
#########
BBBBDD###
BBBBDD###
BBBBDD###
BBBBDD###
CCCC#####
CCCC#####
CCCC#####
CCCC#####
#########
"
deforestation <- plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
plot_map2020 +  plot_dumbnell + top10 + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
plot_map2020
plot_dumbnell
top10
top10
top10
top10
# make sure that {librarian} and {tidytuesdayR} are there
if(!require(librarian)) install.packages("librarian")
if(!require(tidytuesdayR)) install.packages("tidytuesdayR")
# load other libraries
librarian::shelf("tidyverse",                 # no intro required
"rvest",                     # scrapping data from wikipedia
"patchwork",                 # plotting aggregation
"here",
"ggtext",                    # element_markdown()
"ggalt",                     # for Dumbnell chart
"wpp2019",                   # world population prospects from United Nations Population Division
"giscoR","sf",               # maps
"carlosyanez/customthemes"   # personal library with custom themes
)
tt_date<-"2021-04-06"
bg_colour <- "#fffdeb"
# load data
tuesdata <- tidytuesdayR::tt_load(tt_date)
forest_change <- tuesdata$forest
forest_area <- tuesdata$forest_area
brazil_loss <- tuesdata$brazil_loss
# overall forest area estimate from FAO via wikipedia
forest_area_year <- read_html("https://en.m.wikipedia.org/wiki/List_of_countries_by_forest_area") %>%
html_node(xpath="/html/body/div[1]/div/main/div[3]/div[1]/div/section[2]/table") %>%
html_table(fill = TRUE) %>%
filter(Region=="World") %>%
select(-Region) %>%
mutate(across(where(is.character),
function(x){1000*as.numeric(str_remove_all(x,","))})) %>%
unlist(., use.names=TRUE)
# world's maps
world <- gisco_get_countries() %>% filter(!(CNTR_NAME =="Antarctica"))
# population data from UN
data(pop)
a <- ls()[grepl("pop",ls())]
a <- tibble(list=a) %>%
filter(!(list %in% c("pop"))) %>%
pull(list)
pop <- pop %>% mutate(across(where(is.numeric),function(x){x*1000}))
rm(list=a,"a")
forest_apportion <-forest_area %>%
filter(!is.na(code) & year %in% c(2000,2020)) %>%
pivot_wider(values_from = forest_area,names_from = year) %>%
left_join(pop %>% select(entity=name,pop_2020=`2020`,pop_2000=`2000`),by="entity") %>%
mutate(forest_area2020 = `2020`*forest_area_year[grepl("2020", names(forest_area_year))],
forest_area2000 = `2000`*forest_area_year[grepl("2000", names(forest_area_year))],
pc2020 = forest_area2020/pop_2020,
pc2000 = forest_area2000/pop_2000,
diffpc = (pc2020 - pc2000)/pc2000,
diffpc_abs = (pc2020 - pc2000),
area_diff = (`2020` -`2000`)/`2000`,
area_diff_abs=(`2020` -`2000`)
)
scale1 <- scale_fill_gradient2(low = "#d1b152",
mid = "#b6d6ab",
high = '#164a06',
midpoint = quantile(log(forest_apportion$pc2020),0.5, na.rm=TRUE),
na.value = '#f0ecc9',
trans = "log",
name = "hectares per capita",
breaks=c(0,1,20,500)
)
plot_map2020 <- world %>% left_join(forest_apportion %>% filter(!(is.nan(diffpc) | is.na(diffpc))),
by=c("ISO3_CODE"="code")) %>%
ggplot() +
geom_sf(aes(fill=pc2020)) +
customthemes::custom_map_theme_md(legend_pos = "right",
legend_dir = "vertical",
background_colour = bg_colour) +
scale1 +
labs(subtitle="")
low_colour <-"bisque2"
high_colour <- '#bad744'
plot_mapdiff <- world %>% left_join(forest_apportion %>%
filter(!(is.nan(diffpc) | is.na(diffpc))),
by=c("ISO3_CODE"="code")) %>%
ggplot() +
geom_sf(aes(fill=diffpc)) +
customthemes::custom_map_theme_md(legend_pos = "bottom",legend_dir = "horizontal") +
labs(title="hello") +
scale_fill_gradient2(low = low_colour,
mid = "white",
high = high_colour,
midpoint = 0,
na.value = 'gray80',
name = "Change in area (%)")
# chart with top 10
top10 <- forest_apportion %>% slice_max(pc2020,n=10) %>%
ggplot() + geom_col(aes(x=fct_reorder(entity,pc2020),y=pc2020,fill=pc2020)) +
coord_flip() +
customthemes::custom_plot_theme_md(background_colour = bg_colour,legend_pos="none") +
scale1 +
scale_y_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(subtitle = "Forest area per capita - **Top 10**",
x= "",
y="Hectares per capita")
# look at countries with biggest (positive and negative) changes
# (and numberblocks reference)
# reference : https://towardsdatascience.com/create-dumbbell-plots-to-visualize-group-differences-in-r-3536b7d0a19a
extreme14  <- rbind(forest_apportion %>% filter(!is.na(pc2000) | !is.na(pc2020)) %>% slice_max(diffpc_abs,n=7) %>% mutate(group="Top 7"),
forest_apportion  %>%  filter(!is.na(pc2000) | !is.na(pc2020)) %>% slice_min(diffpc_abs,n=7) %>% mutate(group="Bottom 7")) %>%
arrange(desc(area_diff_abs))%>%
mutate(Country=as_factor(entity))
colour_2000 <-"#76b6cf"
colour_2020 <-"#054963"
chart_title <- str_c("Per capita changes between \n <i  style='color:",
colour_2000,"'> 2000</i> and <i style='color:",
colour_2020,
"'>2020</i>")
p1 <- extreme14 %>% filter(group=="Top 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = high_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("+",round(diffpc_abs,1))),
size=2.75, vjust=2.5)+
customthemes::custom_plot_theme_md(background_colour = bg_colour) +
theme(legend.position="none",
panel.grid.major.y=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.text.x=element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_textbox_simple(fill=high_colour,orientation = "left-rotated")
) +
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020)))+
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(y="**Top 7**",subtitle = chart_title)
p2 <- extreme14 %>% filter(group=="Bottom 7") %>% ggplot() +
geom_dumbbell(aes(y=fct_reorder(Country,diffpc_abs), x=pc2000, xend=pc2020),
colour = low_colour,
size=3,
colour_x = colour_2000, colour_xend = colour_2020) +
geom_text(aes(y=fct_reorder(Country,diffpc_abs),x=pc2020,label=str_c("",round(diffpc_abs,1))),
size=2.75, vjust=2.5) +
customthemes::custom_plot_theme_md(background_colour = bg_colour) +
theme(legend.position="none",
panel.grid.major.y =element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
axis.ticks=element_blank(),
axis.title.y = element_textbox_simple(fill=low_colour,orientation = "left-rotated")
)+
xlim(min(c(extreme14$pc2000,extreme14$pc2020)), max(c(extreme14$pc2000,extreme14$pc2020))) +
scale_x_continuous(labels=function(x) format(x, big.mark = ",", scientific = FALSE)) +
labs(x="Hectares per capita", y="**Bottom 7**")
plot_dumbnell <- p1 / p2   &
theme(plot.title =  element_markdown(hjust=0))
#put together
layout <- "
AAAAA##
AAAAA##
AAAAA##
AAAAA##
BB#####
BB#####
BB#####
CC#####
CC#####
CC#####
CC#####
CC#####
CC#####
"
deforestation <- plot_map2020 + top10 + plot_dumbnell + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
layout <- "
AAAAA##
AAAAA##
AAAAA##
AAAAA##
AAAAA##
BB#####
BB#####
BB#####
CC#####
CC#####
CC#####
CC#####
CC#####
CC#####
"
deforestation <- plot_map2020 + top10 + plot_dumbnell + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
save_image(deforestation,here(tt_date,"deforestation.png"),width=7,height=14)
layout <- "
#AAAAA#
#AAAAA#
#AAAAA#
#AAAAA#
#AAAAA#
BB#####
BB#####
BB#####
CC#####
CC#####
CC#####
CC#####
CC#####
CC#####
"
deforestation <- plot_map2020 + top10 + plot_dumbnell + plot_layout(design = layout) &
theme(panel.background = element_rect(fill = bg_colour, colour = NA),
plot.background = element_rect(fill = bg_colour, colour = NA),
plot.margin=grid::unit(c(1,3,1,3), "mm"))   ##top, right, bottom, left)
save_image(deforestation,here(tt_date,"deforestation.png"),width=7,height=14)
